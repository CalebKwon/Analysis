

### text 모음 ###

library("NLP")
library("tm")
library("SnowballC ")
library("RColorBrewer")
library("wordcloud")

getwd()
setwd("")

d<-file("open.txt", open="rb")
data<-readLines(d,encoding="latin1")
docs <- Corpus(VectorSource(data))
inspect(docs)
head(docs, 10)

# Remove numbers
docs <- tm_map(docs, removeNumbers)

# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))

# Remove your own stop word
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("blabla1", "blabla2")) 

# Remove punctuations
docs <- tm_map(docs, removePunctuation)

# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)

# Text stemming
# docs <- tm_map(docs, stemDocument)

dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)

set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 1,
          max.words=200, random.order=FALSE, rot.per=0.35, 
          colors=brewer.pal(8, "Dark2"))

findFreqTerms(dtm, lowfreq = 4)

findAssocs(dtm, terms = "freedom", corlimit = 0.3)

barplot(d[1:10,]$freq, las = 2, names.arg = d[1:10,]$word,
        col ="lightblue", main ="Most frequent words",
        ylab = "Word frequencies")
        
# social network Analisys
# change it to a Boolean matrix

m[m>=1] <- 1
# transform into a term-term adjacency matrix
SNM <- m %*% t(m)
# inspect terms numbered 5 to 10
SNM


library(igraph)
# build a graph from the above matrix
g <- graph.adjacency(SNM, weighted=T, mode = "undirected")
# remove loops
g <- simplify(g)
# set labels and degrees of vertices
V(g)$label <- V(g)$name
V(g)$degree <- degree(g)

# set seed to make the layout reproducible
set.seed(3952)
layout1 <- layout.fruchterman.reingold(g)
plot(g, layout=layout1)

plot(g, layout=layout.kamada.kawai)

V(g)$label.cex <- 2.2 * V(g)$degree / max(V(g)$degree)+ .2
V(g)$label.color <- rgb(0, 0, .2, .8)
V(g)$frame.color <- NA
egam <- (log(E(g)$weight)+.4) / max(log(E(g)$weight)+.4)
E(g)$color <- rgb(.5, .5, 0, egam)
E(g)$width <- egam
# plot the graph in layout1
plot(g, layout=layout1)


          
 ### 한글 모음###
 
 setwd("c:/Rtest")
install.packages(c("KoNLP", "arules", "igraph", "combinat"))
library(KoNLP)
library(arules)
library(igraph)
library(combinat)
f <- file("tax.txt", encoding="UTF-8")
fl <- readLines(f)
close(f)
head(fl, 10)
tran <- Map(extractNoun, fl)
tran <- unique(tran)
tran <- sapply(tran, unique)
tran <- sapply(tran, function(x) {Filter(function(y) {nchar(y) <= 4 && nchar(y) 1 && is.hangul(y)},x)} )
tran <- Filter(function(x){length(x) >= 2}, tran)
names(tran) <- paste("Tr", 1:length(tran), sep="")
names(tran)
wordtran <- as(tran, "transactions")
wordtran
wordtab <- crossTable(wordtran)
wordtab
ares <- apriori(wordtran, parameter=list(supp=0.07, conf=0.05))
inspect(ares)
rules <- labels(ares, ruleSep=" ")
rules <- sapply(rules, strsplit, " ", USE.NAMES=F)
rulemat <- do.call("rbind", rules)
ruleg <- graph.edgelist(rulemat[-c(1:16),],directed=F)
plot.igraph(ruleg, vertex.label=V(ruleg)$name,
            vertex.label.cex=0.5, vertex.size=20,
            layout=layout.fruchterman.reingold.grid)
closen <- closeness(ruleg)
plot(closen, col="red",xaxt="n", lty="solid", type="b", xlab="´Ü¾î", ylab="closeness")
points(closen, pch=16, col="navy")
axis(1, seq(1, length(closen)), V(ruleg)$name, cex=5)
